# docker/docker-compose.full.yml
version: '3.8'

services:
  webserver:
    build:
      context: ../web-server
      dockerfile: docker/Dockerfile
    ports:
      - "8000:8000"
    environment:
      - REDIS_HOST=redis
      - AGENT_SERVICE_HOST=agent-execution
      - API_V1_STR=/api/v1
      - PROJECT_NAME=AI Agent API
      - LOG_LEVEL=INFO
    depends_on:
      - redis
      - agent-execution
    networks:
      - agent-network
    volumes:
      - ../web-server/app:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  agent-execution:
    build:
      context: ../execution-environment
      dockerfile: docker/Dockerfile
    environment:
      - REDIS_HOST=redis
      - LOG_LEVEL=INFO
      - AGENT_NAME=DefaultAgent
      - MODEL_NAME=gpt-4
    depends_on:
      - redis
    networks:
      - agent-network
    volumes:
      - ../execution-environment:/app
    healthcheck:
      test: ["CMD", "python", "-c", "import socket; socket.socket().connect(('localhost', 5000))"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:6-alpine
    ports:
      - "6379:6379"
    networks:
      - agent-network
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    networks:
      - agent-network
    depends_on:
      - webserver
      - agent-execution

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - ./grafana:/etc/grafana
      - grafana_data:/var/lib/grafana
    networks:
      - agent-network
    depends_on:
      - prometheus

volumes:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  agent-network:
    driver: bridge